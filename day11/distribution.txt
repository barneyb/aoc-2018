
Histogram<Integer> h = new Histogram<>();
Grid g;
int minLeg = 1;
int maxLeg = 40;
for (int n = 0; n < 2000; n++) {
    g = new Grid(n + 1234);
    int l = g.mostPowerfulPoint(minLeg, maxLeg).leg;
    h.count(l);
}
StringBuilder sb;
for (int i = minLeg; i <= maxLeg; i++) {
    sb = new StringBuilder();
    int l = h.get(i);
    for (int j = 0; j < l; j += 4) {
        sb.append('#');
    }
    System.out.printf("%2d (%3d): %s%n", i, l, sb.toString());
}


 1 (  0):
 2 (  0):
 3 (  0):
 4 (  0):
 5 (  6): ##
 6 ( 12): ###
 7 (116): #############################
 8 ( 38): ##########
 9 (154): #######################################
10 (152): ######################################
11 (310): ##############################################################################
12 (292): #########################################################################
13 (360): ##########################################################################################
14 (160): ########################################
15 (182): ##############################################
16 (124): ###############################
17 ( 40): ##########
18 ( 18): #####
19 (  6): ##
20 ( 18): #####
21 (  0):
22 (  8): ##
23 (  0):
24 (  0):
25 (  0):
26 (  0):
27 (  4): #
28 (  0):
29 (  0):
30 (  0):
31 (  0):
32 (  0):
33 (  0):
34 (  0):
35 (  0):
36 (  0):
37 (  0):
38 (  0):
39 (  0):
40 (  0):
